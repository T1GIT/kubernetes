# Сервис контроля целостности конфигураций и база данных для эталонных конфигураций.
# Использует NodeJS приложение и MongoDB для хранения данных.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: config-pvc
  namespace: security-ns
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-service
  namespace: security-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: config-service
  template:
    metadata:
      labels:
        app: config-service
    spec:
      containers:
        - name: config-service-app
          image: docker.io/t1mondocker/config-service
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: host-config-service
              mountPath: /host
          env:
            - name: PORT
              value: "3000"
            - name: ROOT
              value: "/host"
            - name: INTERVAL
              value: "10"
            - name: MONGO_HOST
              value: "config-db-service"
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_NAME
              value: "config-db"
            - name: REDIS_HOST
              value: "redis-service"
            - name: REDIS_PORT
              value: "6379"
        - name: config-db
          image: mongo:latest
          volumeMounts:
            - name: config-db-data
              mountPath: /data/db
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
        - name: config-db-express
          image: mongo-express:latest
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_SERVER
              value: "config-db-service"
            - name: ME_CONFIG_MONGODB_PORT
              value: "27017"
            - name: ME_CONFIG_BASICAUTH_USERNAME
              value: "admin"
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              value: "admin"
      volumes:
        - name: config-db-data
          persistentVolumeClaim:
            claimName: config-pvc
        - name: host-config-service
          hostPath:
            path: /host
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: config-service
  namespace: security-ns
spec:
  selector:
    app: config-service
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      name: http
---
apiVersion: v1
kind: Service
metadata:
  name: config-db-service
  namespace: security-ns
spec:
  selector:
    app: config-service
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
      name: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: config-db-express-service
  namespace: security-ns
spec:
  selector:
    app: config-service
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      name: mongodb-express
